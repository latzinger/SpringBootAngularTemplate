{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/example/example.component.ts","./src/app/components/example/example.component.html","./src/app/components/notification-banner/notification-banner.component.ts","./src/app/components/notification-banner/notification-banner.component.html","./src/app/services/notification.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService, Notification } from './services/notification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'thb2020-frontend';\n\n\n\n  constructor(private readonly notifications: NotificationService) { }\n\n  public notification: Notification | null = null;\n  public shouldDisplayNotification = false;\n\n  ngOnInit() {\n\n\n  this.notifications.notifications.subscribe(x => { \n    this.shouldDisplayNotification = false;\n    setTimeout(() => {\n      this.notification = x;\n      this.shouldDisplayNotification = true;  \n    }, 25);\n  });\n  }\n\n}\n","\n<div class=\"main-container\">\n  <header class=\"header-6\">\n    <div class=\"branding\">\n      <span class=\"title\">Starter Project</span>\n    </div>\n    <div class=\"header-nav\">\n        <a href=\"javascript://\" class=\"active nav-link nav-text\">Link 1</a>\n        <a href=\"javascript://\" class=\"nav-link nav-text\">Link 2</a>\n    </div>\n    <!-- If you wish to have an action button on the top-right\n      <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n    -->\n</header>\n  <div class=\"content-container\">\n      <div class=\"content-area\">\n        <db-notification-banner *ngIf=\"shouldDisplayNotification\" [notification]=\"notification\">\n        </db-notification-banner>\n        \n        <h4> Evoila PROJ Angular Template </h4>\n\n        <!-- \n          app-example is a simple hello world component to demonstrate notification.service\n          and notification-banner.component in action \n        -->\n        \n        <app-example></app-example>\n                \n        \n      </div>\n  </div>\n</div>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NotificationService } from './services/notification.service';\nimport { NotificationBannerComponent } from './components/notification-banner/notification-banner.component';\nimport { ExampleComponent } from './components/example/example.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotificationBannerComponent,\n    ExampleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule\n  ],\n  providers: [NotificationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Notification, NotificationService, NotificationType } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.scss']\n})\nexport class ExampleComponent implements OnInit {\n\n  constructor(private notification: NotificationService) { }\n  \n  openModal = false;\n  \n  ngOnInit(): void {\n  }\n\n  showExampleNotification(){\n    this.notification.add(\n      new Notification(\n        NotificationType.Info,\n        'Hello - this is a notification.',\n        'This is the notifications detail information hopefully helping the user to understand whats going on'\n      )\n    )\n  }\n\n  showExampleModal(){\n    this.openModal = true;\n  }\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col-sm-12 clr-col-md-12\">\n        <p>Welcome! Angular App is running.</p>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-12\">\n        <p></p>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-12\">\n      <button class=\"btn\" (click)=\"showExampleNotification()\">Notification</button>\n      <button class=\"btn\" (click)=\"showExampleModal()\">Modal</button>\n    </div>\n</div>\n\n<clr-modal [(clrModalOpen)]=\"openModal\" [clrModalSize]=\"'md'\">\n    <h3 class=\"modal-title\">This is a Modal</h3>\n    <div class=\"modal-body\">\n      <p>\n        Your Text here.\n      </p>\n      </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"openModal = false\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal = false\">Ok</button>\n    </div>\n  </clr-modal>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Notification } from '../../services/notification.service';\n\n@Component({\n  selector: 'db-notification-banner',\n  templateUrl: './notification-banner.component.html',\n  styleUrls: ['./notification-banner.component.scss']\n})\nexport class NotificationBannerComponent implements OnInit {\n  @Input()\n  public notification: Notification;\n\n  @Output()\n  public readonly close: EventEmitter<any> = new EventEmitter();\n  \n  displayMsg: string = \"\";\n  actionButtonLabel = 'Details';\n  constructor() { }\n\n  ngOnInit() { \n    this.displayMsg = this.notification.message;\n  }\n\n  public onClose() {\n    this.close.emit();\n  }\n\n  toggleErrorNotificationDetail(){\n    this.displayMsg = this.displayMsg == this.notification.message ? this.notification.detail : this.notification.message;\n    this.actionButtonLabel = this.actionButtonLabel == 'Details' ? 'Less' : 'Details';\n  }\n\n}\n","<clr-alert [clrAlertType]=\"'notification.type'\" [clrAlertSizeSmall]=\"false\"> \n    <clr-alert-item>\n        <span class=\"alert-text\">{{displayMsg}}</span>\n        <div class=\"alert-actions\" *ngIf=\"notification.detail && notification.detail.length > 0\">\n          <a (click)=\"toggleErrorNotificationDetail()\" class=\"alert-action\">{{actionButtonLabel}}</a>\n        </div>\n        <!-- <a *ngIf=\"notification.link\" [routerLink]=\"notification.link.routerLink\" (click)=\"onClose()\">{{notification.link.title}}</a>-->\n    </clr-alert-item>\n</clr-alert>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\nexport enum NotificationType {\n  Warning = <any>\"warning\",\n  Info = <any>\"info\",\n  Danger = <any>\"danger\"\n}\n\nexport interface NotificationActionLink {\n  title: string;\n  routerLink: string[];\n}\n\nexport class Notification {\n  constructor(\n    public readonly type: NotificationType,\n    public readonly message: string,\n    public readonly detail: string,\n    public readonly link?: NotificationActionLink) {\n  }\n}\n\n@Injectable()\nexport class NotificationService {\n  private readonly _notifications = new Subject<Notification | null>();\n\n  public readonly notifications = this._notifications.asObservable();\n\n  public add(notification: Notification) {\n    if (!notification.message || notification.message.trim() == \"\"){\n      console.error(\"ERROR NOTIFICATION WITHOUT MESSAGE: \" + notification)\n    }\n    this._notifications.next(notification);\n  }\n\n  public flushNotification() {\n    this._notifications.next(null);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}