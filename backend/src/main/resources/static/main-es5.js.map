{"version":3,"sources":["webpack:///src/app/services/book.service.ts","webpack:///src/environments/runtime-environment.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/example/example.component.ts","webpack:///src/app/components/example/example.component.html","webpack:///src/app/services/notification.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/notification-banner/notification-banner.component.ts","webpack:///src/app/components/notification-banner/notification-banner.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/db-example-interaction/db-example-interaction.component.ts","webpack:///src/app/components/db-example-interaction/db-example-interaction.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["BookService","http","authToken","token","baseUri","httpOptions","headers","Authorization","append","url","get","id","book","body","JSON","stringify","post","providedIn","injectedEnv","window","seedEnv","console","warn","realm","environment","Object","assign","production","ExampleComponent","notification","openModal","add","Info","showExampleNotification","showExampleModal","selector","templateUrl","styleUrls","NotificationType","Notification","type","message","detail","link","NotificationService","_notifications","notifications","asObservable","trim","error","next","AppComponent","title","shouldDisplayNotification","subscribe","x","setTimeout","AppModule","declarations","imports","providers","bootstrap","NotificationBannerComponent","close","displayMsg","actionButtonLabel","emit","routes","AppRoutingModule","forRoot","exports","DbExampleInteractionComponent","library","books","addBookName","addBookAuthor","addBookPages","addBookIsbn","loadBooks","getAllBooks","k","deleteBook","name","author","pages","isbn","addBook","localBooks","Array","i","b","makeBook","Number","Math","floor","random","randomString","concat","length","result","characters","charactersLength","charAt","insertBook","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { NotificationService } from './notification.service';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Book } from '../models/book';\nimport { environment } from '../../environments/runtime-environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n\n  private authToken = environment.token;\n  private baseUri = \"http://localhost:8081/secure\";\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: this.authToken\n    }).append('Content-Type', 'application/json')\n  };\n\n\n  constructor(\n    private http: HttpClient\n  ) {}\n\n\n    // GET ALL BOOKS\n   public getAllBooks(): Observable<any> {\n    const url = this.baseUri + \"/books\";\n    return this.http.get<Book>(url, this.httpOptions);\n  }\n\n   // GET ONE BOOK\n   public getBook(id: string): Observable<any> {\n    const url = this.baseUri + \"/books/\" + id;\n    return this.http.get<Book>(url, this.httpOptions);\n  }\n\n\n   // INSERT BOOK\n   public addBook(book: Book): Observable<any> {\n    const url = this.baseUri + \"/books\";\n    const body = JSON.stringify(book);\n    return this.http.post<Book>(url, body, this.httpOptions);\n  }\n   \n    // DELETE BOOK\n    public deleteBook(id: string): Observable<any> {\n      const url = this.baseUri + \"/books/\" + id;\n      return this.http.delete<Book>(url, this.httpOptions);\n    }\n\n\n\n\n\n\n\n\n\n\n\n  /*\n  Endpoints (POST, DELETE, GET):\nhttp://localhost:8081/secure/books\n\nhttp://localhost:8081/secure/books/{id}\n\n \nBook Entity:\n\n{\n        \"name\": \"Steve Jobs: A Biography\",\n        \"isbn\": \"978-1451648539\",\n        \"pages\": \"697\",\n        \"author\": \"Walter Isaacson\"\n}\n  \n  \n  */\n\n\n\n\n\n\n}\n","\n// this var will be injected via index.html and server-side include\nconst injectedEnv = window[\"INJECTED_ENVIRONMENT\"];\nlet seedEnv: Environment;\n\nif (!injectedEnv) {\n  console.warn(\"Angular PROJ Template DEFAULT DEVELOPMENT ENV\");\n  seedEnv = {\n    realm: \"TH-Bingen\",\n    token:\n      \"bearer eyJhbGciOiJSUzI1NiIsImprdSI6Imh0dHBzOi8vdWFhLnN5c3RlbS5jZi5ob2IubG9jYWwvdG9rZW5fa2V5cyIsImtpZCI6ImtleS0xIiwidHlwIjoiSldUIn0.eyJqdGkiOiJhNDFhZjE1NzEwNDk0NjkzOWMzMWI2YjNjODFjZjI1ZiIsInN1YiI6ImFjNTcxOGQ4LThlZjEtNDc1ZS1hZWYzLTUyNjk5YzlmNjAwZSIsInNjb3BlIjpbImNsb3VkX2NvbnRyb2xsZXJfc2VydmljZV9wZXJtaXNzaW9ucy5yZWFkIiwib3BlbmlkIl0sImNsaWVudF9pZCI6Im9zYi1sb2ctbWV0cmljLXRlc3Quc3lzdGVtLmNmLmhvYi5sb2NhbCIsImNpZCI6Im9zYi1sb2ctbWV0cmljLXRlc3Quc3lzdGVtLmNmLmhvYi5sb2NhbCIsImF6cCI6Im9zYi1sb2ctbWV0cmljLXRlc3Quc3lzdGVtLmNmLmhvYi5sb2NhbCIsImdyYW50X3R5cGUiOiJhdXRob3JpemF0aW9uX2NvZGUiLCJ1c2VyX2lkIjoiYWM1NzE4ZDgtOGVmMS00NzVlLWFlZjMtNTI2OTljOWY2MDBlIiwib3JpZ2luIjoiRXZvaWxhU1NPIiwidXNlcl9uYW1lIjoibW1haGxlciIsImVtYWlsIjoibW1haGxlckBldm9pbGEuZGUiLCJhdXRoX3RpbWUiOjE2MDU4NjIzODgsInJldl9zaWciOiI0ZDc3MzdhZiIsImlhdCI6MTYwNTg2MjM4OSwiZXhwIjoxNjA1OTA1NTg5LCJpc3MiOiJodHRwczovL3VhYS5zeXN0ZW0uY2YuaG9iLmxvY2FsL29hdXRoL3Rva2VuIiwiemlkIjoidWFhIiwiYXVkIjpbIm9wZW5pZCIsIm9zYi1sb2ctbWV0cmljLXRlc3Quc3lzdGVtLmNmLmhvYi5sb2NhbCIsImNsb3VkX2NvbnRyb2xsZXJfc2VydmljZV9wZXJtaXNzaW9ucyJdfQ.PyCzIMlXg2zdGYPRridAk3XNe3VXIA3DdlMo0zQ0uNLz6lz6U2gTiQ6wbu4UK68VIKj4B-d-T0wriKD3DstgVGhPCDlUZDrlcyTMKcjNeSHTYHf4YDZcaog4L7-m6TnnKrwD51UYDpTqJwKhyhafxGiQ9vdtgoGjlPoNmYlNXKKvglHbR3u3jNHXZFg7JH_ts8bvrfW6jcMx0PzDfUlAFoYDrpMzqPzxnp3qiBV0774ScviuLqk_MwgPnNbRCNVetm-Dnu6cvyaHl1S3APwUnjpp6MisbwNUEV5YveJE0PdQ8er_wvsmZD_DKj5voxEmljc0kbOoXU77ToRO0YVo9g\",\n    \n  } as Environment;\n}\n\nexport interface Environment {\n  realm: string;\n  token: string;\n}\n\n// overwrite default env with injected vars\nexport const environment: Environment = Object.assign({}, seedEnv, injectedEnv);","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Notification, NotificationService, NotificationType } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.scss']\n})\nexport class ExampleComponent implements OnInit {\n\n  constructor(private notification: NotificationService) { }\n  \n  openModal = false;\n  \n  ngOnInit(): void {\n  }\n\n  showExampleNotification(){\n    this.notification.add(\n      new Notification(\n        NotificationType.Info,\n        'Hello - this is a notification.',\n        'This is the notifications detail information hopefully helping the user to understand whats going on'\n      )\n    )\n  }\n\n  showExampleModal(){\n    this.openModal = true;\n  }\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col-sm-12 clr-col-md-8\">\n      <p id=\"p\"> Welcome! Angular App is running. </p>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-4\">\n      <button class=\"btn\" (click)=\"showExampleNotification()\">Notification</button>\n      <button class=\"btn\" (click)=\"showExampleModal()\">Modal</button>\n    </div>\n    <p></p>\n</div>\n\n<clr-modal [(clrModalOpen)]=\"openModal\" [clrModalSize]=\"'md'\">\n    <h3 class=\"modal-title\">This is a Modal</h3>\n    <div class=\"modal-body\">\n      <p>\n        Your Text here.\n      </p>\n      </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"openModal = false\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal = false\">Ok</button>\n    </div>\n  </clr-modal>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\nexport enum NotificationType {\n  Warning = <any>\"warning\",\n  Info = <any>\"info\",\n  Danger = <any>\"danger\"\n}\n\nexport interface NotificationActionLink {\n  title: string;\n  routerLink: string[];\n}\n\nexport class Notification {\n  constructor(\n    public readonly type: NotificationType,\n    public readonly message: string,\n    public readonly detail: string,\n    public readonly link?: NotificationActionLink) {\n  }\n}\n\n@Injectable()\nexport class NotificationService {\n  private readonly _notifications = new Subject<Notification | null>();\n\n  public readonly notifications = this._notifications.asObservable();\n\n  public add(notification: Notification) {\n    if (!notification.message || notification.message.trim() == \"\"){\n      console.error(\"ERROR NOTIFICATION WITHOUT MESSAGE: \" + notification)\n    }\n    this._notifications.next(notification);\n  }\n\n  public flushNotification() {\n    this._notifications.next(null);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService, Notification } from './services/notification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'thb2020-frontend';\n\n\n\n  constructor(private readonly notifications: NotificationService) { }\n\n  public notification: Notification | null = null;\n  public shouldDisplayNotification = false;\n\n  ngOnInit() {\n\n\n  this.notifications.notifications.subscribe(x => { \n    this.shouldDisplayNotification = false;\n    setTimeout(() => {\n      this.notification = x;\n      this.shouldDisplayNotification = true;  \n    }, 25);\n  });\n  }\n\n}\n","\n<div class=\"main-container\">\n  <header class=\"header-6\">\n    <div class=\"branding\">\n      <span class=\"title\">PROJ Template</span>\n    </div>\n    <div class=\"header-nav\">\n        <a href=\"javascript://\" class=\"active nav-link nav-text\">Link 1</a>\n        <a href=\"javascript://\" class=\"nav-link nav-text\">Link 2</a>\n    </div>\n    <!-- If you wish to have an action button on the top-right\n      <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n    -->\n</header>\n  <div class=\"content-container\">\n      <div class=\"content-area\">\n        <db-notification-banner *ngIf=\"shouldDisplayNotification\" [notification]=\"notification\">\n        </db-notification-banner>\n\n        <!-- \n          app-example is a simple hello world component to demonstrate notification.service\n          and notification-banner.component in action \n        -->\n        <app-example></app-example>\n          \n        <!-- example component to demonstrate database interaction -->\n        <app-db-example-interaction id=\"db-example\"></app-db-example-interaction>\n\n        \n      </div>\n  </div>\n</div>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NotificationService } from './services/notification.service';\nimport { NotificationBannerComponent } from './components/notification-banner/notification-banner.component';\nimport { ExampleComponent } from './components/example/example.component';\nimport { DbExampleInteractionComponent } from './components/db-example-interaction/db-example-interaction.component';\nimport { BookService } from './services/book.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotificationBannerComponent,\n    ExampleComponent,\n    DbExampleInteractionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [NotificationService, BookService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Notification } from '../../services/notification.service';\n\n@Component({\n  selector: 'db-notification-banner',\n  templateUrl: './notification-banner.component.html',\n  styleUrls: ['./notification-banner.component.scss']\n})\nexport class NotificationBannerComponent implements OnInit {\n  @Input()\n  public notification: Notification;\n\n  @Output()\n  public readonly close: EventEmitter<any> = new EventEmitter();\n  \n  displayMsg: string = \"\";\n  actionButtonLabel = 'Details';\n  constructor() { }\n\n  ngOnInit() { \n    this.displayMsg = this.notification.message;\n  }\n\n  public onClose() {\n    this.close.emit();\n  }\n\n  toggleErrorNotificationDetail(){\n    this.displayMsg = this.displayMsg == this.notification.message ? this.notification.detail : this.notification.message;\n    this.actionButtonLabel = this.actionButtonLabel == 'Details' ? 'Less' : 'Details';\n  }\n\n}\n","<clr-alert [clrAlertType]=\"'notification.type'\" [clrAlertSizeSmall]=\"false\"> \n    <clr-alert-item>\n        <span class=\"alert-text\">{{displayMsg}}</span>\n        <div class=\"alert-actions\" *ngIf=\"notification.detail && notification.detail.length > 0\">\n          <a (click)=\"toggleErrorNotificationDetail()\" class=\"alert-action\">{{actionButtonLabel}}</a>\n        </div>\n        <!-- <a *ngIf=\"notification.link\" [routerLink]=\"notification.link.routerLink\" (click)=\"onClose()\">{{notification.link.title}}</a>-->\n    </clr-alert-item>\n</clr-alert>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { Book } from 'src/app/models/book';\nimport { BookService } from '../../services/book.service';\n\n@Component({\n  selector: 'app-db-example-interaction',\n  templateUrl: './db-example-interaction.component.html',\n  styleUrls: ['./db-example-interaction.component.scss']\n})\nexport class DbExampleInteractionComponent implements OnInit {\n\n  books$: Observable<Array<Book>> | null;  \n  books: Array<Book> = []; \n\n  public addBookName = \"\";\n  public addBookAuthor = \"\";\n  public addBookPages = 0;\n  public addBookIsbn = \"\";\n\n  constructor(private library: BookService) { }\n\n  ngOnInit(): void {\n    this.loadBooks();\n  }\n\n  loadBooks(){\n    this.books = [];\n\n    /*// GET LOCAL\n    setTimeout(() => {\n      this.books = this.generateLocalBooks();\n    }, 25);\n    */\n\n     //GET FROM POSTGRES\n    this.library.getAllBooks().subscribe(k => {\n      this.books = k;\n    });\n    \n  }\n\n  deleteBook(id: string){\n    this.library.deleteBook(id).subscribe(k => {\n      this.loadBooks();\n    });\n  }\n\n  insertBook(){\n\n    const book = {\n      name: this.addBookName,\n      author: this.addBookAuthor,\n      pages: this.addBookPages,\n      isbn: this.addBookIsbn\n    };\n\n    this.library.addBook(book).subscribe(k => {\n      this.loadBooks();\n      this.addBookName = \"\";\n      this.addBookAuthor = \"\";\n      this.addBookPages = 0;\n      this.addBookIsbn = \"\";\n    });\n\n  }\n\n\n\n\n\n\n\n\n  // test code to create books locally\n\n  generateLocalBooks(): Array<Book>{\n\n    var localBooks = Array<Book>();\n  \n    for (let i = 0; i < 100; i++) {\n      const b = this.makeBook(Number(Math.floor(Math.random() * Math.floor(10000))), this.randomString(10), this.randomString(5), this.randomString(4));\n      localBooks = localBooks.concat(b);\n    }\n    return localBooks;\n  }\n\n  makeBook(pages: number, author: string, name: string, isbn: string){\n    const book : Book = {\n      name: name,\n      author: author,\n      pages: pages,\n      isbn: isbn\n    };\n    return book;\n   }\n\n   randomString(length) {\n   var result           = '';\n   var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n}\n\n // test code end\n\n\n\n\n\n\n\n\n\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <div>\n            <h5>Insert Records into DataBase:</h5>\n            <form clrForm>\n                <clr-input-container>\n                    <label>Name</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"addBookName\" name=\"name\"/>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>Author</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"addBookAuthor\" name=\"author\"/>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>Page Count</label>\n                    <input clrInput type=\"number\" [(ngModel)]=\"addBookPages\" name=\"pages\"/>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>ISBN</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"addBookIsbn\" name=\"isbn\"/>\n                </clr-input-container>\n                <p></p>\n                <button class=\"btn btn-primary\" id=\"submit\" type=\"submit\" [disabled]=\"!(addBookName && addBookAuthor && addBookPages && addBookIsbn)\" (click)=\"insertBook()\">add Book</button>\n            </form>\n            <p></p>\n        </div>\n    </div>\n\n\n    <div class=\"clr-col\">\n        <ul *ngIf=\"books.length\">\n            <li id=\"tableHead\"> \n                <span>Name</span>\n                <span>Author</span>\n                <span>Pages</span>\n                <span>ISBN</span>\n                <span></span>\n            </li>\n            <li *ngFor=\"let book of books; let index = i\" id=\"tableRow\"> \n                <span>{{book.name}}</span>\n                <span>{{book.author}}</span>\n                <span>{{book.pages}}</span>\n                <span>{{book.isbn}}</span>\n                <button class=\"btn btn-icon\" id=\"delete\" (click)=\"deleteBook(book.id)\"> \n                    <clr-icon shape=\"trash\"></clr-icon>\n                </button>\n            </li>\n        </ul>\n    </div>\n    \n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}