{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/example/example.component.ts","webpack:///src/app/components/example/example.component.html","webpack:///src/app/components/notification-banner/notification-banner.component.ts","webpack:///src/app/components/notification-banner/notification-banner.component.html","webpack:///src/app/services/notification.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","notifications","title","notification","shouldDisplayNotification","subscribe","x","setTimeout","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ExampleComponent","openModal","add","Info","showExampleNotification","showExampleModal","NotificationBannerComponent","close","displayMsg","actionButtonLabel","message","emit","detail","NotificationType","Notification","type","link","NotificationService","_notifications","asObservable","trim","console","error","next","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService, Notification } from './services/notification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'thb2020-frontend';\n\n\n\n  constructor(private readonly notifications: NotificationService) { }\n\n  public notification: Notification | null = null;\n  public shouldDisplayNotification = false;\n\n  ngOnInit() {\n\n\n  this.notifications.notifications.subscribe(x => { \n    this.shouldDisplayNotification = false;\n    setTimeout(() => {\n      this.notification = x;\n      this.shouldDisplayNotification = true;  \n    }, 25);\n  });\n  }\n\n}\n","\n<div class=\"main-container\">\n  <header class=\"header-6\">\n    <div class=\"branding\">\n      <span class=\"title\">Starter Project</span>\n    </div>\n    <div class=\"header-nav\">\n        <a href=\"javascript://\" class=\"active nav-link nav-text\">Link 1</a>\n        <a href=\"javascript://\" class=\"nav-link nav-text\">Link 2</a>\n    </div>\n    <!-- If you wish to have an action button on the top-right\n      <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n    -->\n</header>\n  <div class=\"content-container\">\n      <div class=\"content-area\">\n        <db-notification-banner *ngIf=\"shouldDisplayNotification\" [notification]=\"notification\">\n        </db-notification-banner>\n        \n        <h4> Evoila PROJ Angular Template </h4>\n\n        <!-- \n          app-example is a simple hello world component to demonstrate notification.service\n          and notification-banner.component in action \n        -->\n        \n        <app-example></app-example>\n                \n        \n      </div>\n  </div>\n</div>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NotificationService } from './services/notification.service';\nimport { NotificationBannerComponent } from './components/notification-banner/notification-banner.component';\nimport { ExampleComponent } from './components/example/example.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotificationBannerComponent,\n    ExampleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule\n  ],\n  providers: [NotificationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Notification, NotificationService, NotificationType } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.scss']\n})\nexport class ExampleComponent implements OnInit {\n\n  constructor(private notification: NotificationService) { }\n  \n  openModal = false;\n  \n  ngOnInit(): void {\n  }\n\n  showExampleNotification(){\n    this.notification.add(\n      new Notification(\n        NotificationType.Info,\n        'Hello - this is a notification.',\n        'This is the notifications detail information hopefully helping the user to understand whats going on'\n      )\n    )\n  }\n\n  showExampleModal(){\n    this.openModal = true;\n  }\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col-sm-12 clr-col-md-12\">\n        <p>Welcome! Angular App is running.</p>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-12\">\n        <p></p>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-12\">\n      <button class=\"btn\" (click)=\"showExampleNotification()\">Notification</button>\n      <button class=\"btn\" (click)=\"showExampleModal()\">Modal</button>\n    </div>\n</div>\n\n<clr-modal [(clrModalOpen)]=\"openModal\" [clrModalSize]=\"'md'\">\n    <h3 class=\"modal-title\">This is a Modal</h3>\n    <div class=\"modal-body\">\n      <p>\n        Your Text here.\n      </p>\n      </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"openModal = false\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal = false\">Ok</button>\n    </div>\n  </clr-modal>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Notification } from '../../services/notification.service';\n\n@Component({\n  selector: 'db-notification-banner',\n  templateUrl: './notification-banner.component.html',\n  styleUrls: ['./notification-banner.component.scss']\n})\nexport class NotificationBannerComponent implements OnInit {\n  @Input()\n  public notification: Notification;\n\n  @Output()\n  public readonly close: EventEmitter<any> = new EventEmitter();\n  \n  displayMsg: string = \"\";\n  actionButtonLabel = 'Details';\n  constructor() { }\n\n  ngOnInit() { \n    this.displayMsg = this.notification.message;\n  }\n\n  public onClose() {\n    this.close.emit();\n  }\n\n  toggleErrorNotificationDetail(){\n    this.displayMsg = this.displayMsg == this.notification.message ? this.notification.detail : this.notification.message;\n    this.actionButtonLabel = this.actionButtonLabel == 'Details' ? 'Less' : 'Details';\n  }\n\n}\n","<clr-alert [clrAlertType]=\"'notification.type'\" [clrAlertSizeSmall]=\"false\"> \n    <clr-alert-item>\n        <span class=\"alert-text\">{{displayMsg}}</span>\n        <div class=\"alert-actions\" *ngIf=\"notification.detail && notification.detail.length > 0\">\n          <a (click)=\"toggleErrorNotificationDetail()\" class=\"alert-action\">{{actionButtonLabel}}</a>\n        </div>\n        <!-- <a *ngIf=\"notification.link\" [routerLink]=\"notification.link.routerLink\" (click)=\"onClose()\">{{notification.link.title}}</a>-->\n    </clr-alert-item>\n</clr-alert>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\nexport enum NotificationType {\n  Warning = <any>\"warning\",\n  Info = <any>\"info\",\n  Danger = <any>\"danger\"\n}\n\nexport interface NotificationActionLink {\n  title: string;\n  routerLink: string[];\n}\n\nexport class Notification {\n  constructor(\n    public readonly type: NotificationType,\n    public readonly message: string,\n    public readonly detail: string,\n    public readonly link?: NotificationActionLink) {\n  }\n}\n\n@Injectable()\nexport class NotificationService {\n  private readonly _notifications = new Subject<Notification | null>();\n\n  public readonly notifications = this._notifications.asObservable();\n\n  public add(notification: Notification) {\n    if (!notification.message || notification.message.trim() == \"\"){\n      console.error(\"ERROR NOTIFICATION WITHOUT MESSAGE: \" + notification)\n    }\n    this._notifications.next(notification);\n  }\n\n  public flushNotification() {\n    this._notifications.next(null);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}